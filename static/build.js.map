{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/component-bind/index.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/debug/src/debug.js","webpack:///(webpack)/node_modules/process/browser.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./static/socket.test.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","process","load","storage","debug","env","DEBUG","log","console","apply","arguments","formatArgs","args","useColors","namespace","humanize","diff","color","splice","index","lastC","replace","match","save","namespaces","removeItem","type","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","err","message","enable","global","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","test","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","upgrade","noop","packetslist","data","Blob","map","ary","each","done","result","Array","length","next","eachWithIndex","el","cb","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","len","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","push","total","Emitter","obj","mixin","on","addEventListener","event","fn","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","emit","slice","listeners","hasListeners","a","b","constructor","str","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","parser","Transport","opts","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","enablesXDR","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","Error","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","hasCORS","xdomain","xscheme","XMLHttpRequest","XDomainRequest","concat","hasBin","binary","isBuf","Encoder","encodeAsString","BINARY_EVENT","BINARY_ACK","attachments","nsp","id","Decoder","reconstructor","BinaryReconstructor","reconPack","ERROR","types","CONNECT","DISCONNECT","EVENT","ACK","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","parse","tryParse","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","ev","toArray","parseqs","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","autoConnect","subEvents","subs","onopen","options","compress","flags","pop","onclose","reason","onpacket","onconnect","onevent","onack","ondisconnect","ack","self","sent","emitBuffered","indexOf","arr","prev","alphabet","seed","num","Math","floor","yeast","now","Date","decoded","inherit","Polling","hasXHR2","responseType","forceBase64","poll","pause","onPause","polling","doPoll","callbackfn","doWrite","uri","schema","sid","XHR","JSONP","websocket","xd","xs","jsonp","location","isSSL","forceJSONP","eio","Backoff","has","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","lastPing","encoding","packetBuffer","_parser","encoder","decoder","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","attempts","skipReconnect","openSub","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","processPacketQueue","shift","subsLength","reset","delay","duration","onreconnect","attempt","Buffer","isBuffer","isArray","withNativeBlob","withNativeFile","File","toJSON","re","parts","src","exec","source","host","authority","ipv6uri","ms","factor","pow","rand","random","deviation","list","array","NodeWebSocket","BrowserWebSocket","WebSocket","MozWebSocket","WS","perMessageDeflate","usingBrowserWebSocket","protocols","check","headers","ws","supports","addEventListeners","onmessage","threshold","JSONPPolling","rNewline","rEscapedNewline","empty","___eio","script","parentNode","removeChild","form","iframe","createElement","async","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","method","setAttribute","complete","initIframe","html","action","submit","attachEvent","onreadystatechange","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobConstructor","chars","lookup","arraybuffer","bytes","encoded1","encoded2","encoded3","encoded4","bufferLength","webpackPolyfill","deprecate","paths","children","__WEBPACK_AMD_DEFINE_RESULT__","root","freeExports","freeGlobal","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","tmp","ucs2encode","count","err_cb","bail","proxy","start","end","abv","ii","requestTimeout","Request","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","contentType","getResponseHeader","status","requestsCount","onSuccess","fromError","response","transports","parseuri","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","transport","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","h","y","plural","ceil","val","parseFloat","isNaN","long","round","fmtShort","prevTime","createDebug","enabled","curr","coerce","format","formatter","hash","abs","selectColor","init","stack","disable","names","skips","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","versions","addListener","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","loc","href","url","cache","managers","parsed","sameNamespace","forceNew","multiplex","ul","getElementById","input","sendMessage","onkeydown","keyCode","onclick","li","innerText","classList"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar hasBin = require('has-binary2');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  if ((obj.type === exports.EVENT || obj.type === exports.ACK) && hasBin(obj.data)) {\n    obj.type = obj.type === exports.EVENT ? exports.BINARY_EVENT : exports.BINARY_ACK;\n  }\n\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    str += JSON.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = JSON.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error() {\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = { type: parser.EVENT, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          var contentType;\n          try {\n            contentType = xhr.getResponseHeader('Content-Type');\n          } catch (e) {}\n          if (contentType === 'application/octet-stream') {\n            xhr.responseType = 'arraybuffer';\n          }\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","var io = require('socket.io-client');\nvar socket = io.connect('http://127.0.0.1:5000');\n\nvar ul = document.getElementById('message_wrap');\nvar input = document.getElementById('message_input');\nvar id = document.getElementById('id');\n\ninput.onkeydown = function (e) {\n  if(e.keyCode === 13) {\n    sendMessage();\n  }\n}\n\ndocument.getElementById('btn_send').onclick = sendMessage;\n\nsocket.on('message', function (response) {\n  console.log('response', response);\n\n  var li = document.createElement(\"li\");\n  li.innerText  = response.message;\n\n  if (id.value === response.id) {\n    li.classList.add('my_text');\n  } else {\n    li.classList.add('your_text');\n  }\n\n  ul.appendChild(li);\n});\n\nfunction sendMessage() {\n  socket.emit('message', {\n    message: input.value,\n    id: id.value\n  });\n\n  input.value = '';\n}"],"sourceRoot":""}